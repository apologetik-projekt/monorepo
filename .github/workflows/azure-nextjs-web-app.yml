# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - apologetik-projekt

on:
  push:
    branches:
      - master
  workflow_dispatch:

env: 
  NODE_VERSION: 22.x
  PNPM_VERSION: 10.6.3
  NODE_ENV: production
  NEXT_PUBLIC_SERVER_URL: ${{ vars.NEXT_PUBLIC_SERVER_URL }}
  GH_TOKEN: ${{ github.token }}
  PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
  ALTCHA_HMAC_KEY: ${{ secrets.ALTCHA_HMAC_KEY }}
  NEXT_PUBLIC_PLAUSIBLE_API_KEY: ${{ secrets.NEXT_PUBLIC_PLAUSIBLE_API_KEY}}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: Production
    env:
      SMTP_SKIP_VERIFY: ${{ vars.SMTP_SKIP_VERIFY }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      DATABASE_URI: ${{ secrets.DATABASE_URI }}

    steps:
      - uses: actions/checkout@v4
      - name: Use pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - uses: actions/cache@v4
        with:
          path: |
            ${{ env.PNPM_HOME }}
            ${{ github.workspace }}/apps/website/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Install packages
        run: pnpm install --config.node-linker=isolated
      - name: Migrate database
        working-directory: ./apps/website
        run: pnpm run payload migrate
      - name: Build
        working-directory: ./apps/website
        run: pnpm run payload generate:importmap && NEXT_TELEMETRY_DISABLED=1 pnpm run build
      - uses: actions/cache@v4
        name: Cache build
        id: workflow-cache
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Zip artifact for deployment
        run: zip release.zip ./apps/website/* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write
      contents: read
    environment: Production
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'apologetik-projekt'
          slot-name: 'Production'
          package: .
          